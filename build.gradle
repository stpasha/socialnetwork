plugins {
    id 'java'
    id 'checkstyle'
}


allprojects {
    group = project.property('group')
    version = project.property('version')
    repositories {
        mavenCentral()
    }

}


subprojects {
    apply plugin: 'checkstyle'

    tasks.withType(Checkstyle).configureEach {
        ignoreFailures = true
    }

    if (project.name != 'bom') {
        apply plugin: 'java'

        java {
            sourceCompatibility = JavaVersion.VERSION_21
            targetCompatibility = JavaVersion.VERSION_21
        }

        dependencies {
            implementation platform(project(':bom'))
            testAnnotationProcessor platform(project(':bom'))
            annotationProcessor platform(project(':bom'))
            compileOnly platform(project(':bom'))
            testCompileOnly platform(project(':bom'))
            testImplementation platform('org.junit:junit-bom:5.10.0')
            testImplementation 'org.junit.jupiter:junit-jupiter'
            annotationProcessor 'org.projectlombok:lombok'
            compileOnly 'org.projectlombok:lombok'
            testCompileOnly 'org.projectlombok:lombok'
            testAnnotationProcessor 'org.projectlombok:lombok'
            testImplementation 'org.assertj:assertj-core'
            testImplementation 'net.datafaker:datafaker'
            implementation 'org.slf4j:slf4j-simple'
            implementation 'org.slf4j:slf4j-api'
        }



        test {
            useJUnitPlatform()
        }
    }

}

tasks.register('copyArtifacts', Copy) {
    dependsOn subprojects.collect { it.tasks.matching { it.name == 'build' } }

    from(subprojects.collect { it.buildDir }) {
        include '**/*.jar'
        include '**/*.war'
    }
    into "${rootDir}/lib"
}

build.dependsOn(copyArtifacts)

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-parameters"
}


